_action_groups:
    value:
        - <argparse._ArgumentGroup object at 0x7f87a6b396a0>
        - <argparse._ArgumentGroup object at 0x7f87a6b3c7d0>
_actions:
    value:
        - _StoreAction(option_strings=['--data_path'], dest='data_path', nargs=None, const=None, default='/path/to/imagenet', type=<class 'str'>, choices=None, required=False, help='(str, default=/path/to/imagenet) ', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--exp_name'], dest='exp_name', nargs=None, const=None, default='text', type=<class 'str'>, choices=None, required=False, help='(str, default=text) ', metavar=None, deprecated=False)
        - '_StoreAction(option_strings=[''--vfast''], dest=''vfast'', nargs=None, const=None, default=0, type=<class ''int''>, choices=None, required=False, help="(int, default=0) torch.compile VAE; =0: not compile; 1: compile with ''reduce-overhead''; 2: compile with ''max-autotune''", metavar=None, deprecated=False)'
        - '_StoreAction(option_strings=[''--tfast''], dest=''tfast'', nargs=None, const=None, default=0, type=<class ''int''>, choices=None, required=False, help="(int, default=0) torch.compile VAR; =0: not compile; 1: compile with ''reduce-overhead''; 2: compile with ''max-autotune''", metavar=None, deprecated=False)'
        - _StoreAction(option_strings=['--depth'], dest='depth', nargs=None, const=None, default=16, type=<class 'int'>, choices=None, required=False, help='(int, default=16) VAR depth', metavar=None, deprecated=False)
        - '_StoreAction(option_strings=[''--ini''], dest=''ini'', nargs=None, const=None, default=-1, type=<class ''float''>, choices=None, required=False, help=''(float, default=-1) -1: automated model parameter initialization'', metavar=None, deprecated=False)'
        - _StoreAction(option_strings=['--hd'], dest='hd', nargs=None, const=None, default=0.02, type=<class 'float'>, choices=None, required=False, help='(float, default=0.02) head.w *= hd', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--aln'], dest='aln', nargs=None, const=None, default=0.5, type=<class 'float'>, choices=None, required=False, help="(float, default=0.5) the multiplier of ada_lin.w's initialization", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--alng'], dest='alng', nargs=None, const=None, default=1e-05, type=<class 'float'>, choices=None, required=False, help="(float, default=1e-05) the multiplier of ada_lin.w[gamma channels]'s initialization", metavar=None, deprecated=False)
        - '_StoreAction(option_strings=[''--fp16''], dest=''fp16'', nargs=None, const=None, default=0, type=<class ''int''>, choices=None, required=False, help=''(int, default=0) 1: using fp16, 2: bf16'', metavar=None, deprecated=False)'
        - _StoreAction(option_strings=['--tblr'], dest='tblr', nargs=None, const=None, default=0.0001, type=<class 'float'>, choices=None, required=False, help='(float, default=0.0001) base lr', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--tlr'], dest='tlr', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help='(float, default=None) lr = base lr * (bs / 256)', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--twd'], dest='twd', nargs=None, const=None, default=0.05, type=<class 'float'>, choices=None, required=False, help='(float, default=0.05) initial wd', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--twde'], dest='twde', nargs=None, const=None, default=0, type=<class 'float'>, choices=None, required=False, help='(float, default=0) final wd, =twde or twd', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--tclip'], dest='tclip', nargs=None, const=None, default=2.0, type=<class 'float'>, choices=None, required=False, help='(float, default=2.0) <=0 for not using grad clip', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--ls'], dest='ls', nargs=None, const=None, default=0.0, type=<class 'float'>, choices=None, required=False, help='(float, default=0.0) label smooth', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--bs'], dest='bs', nargs=None, const=None, default=768, type=<class 'int'>, choices=None, required=False, help='(int, default=768) global batch size', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--batch_size'], dest='batch_size', nargs=None, const=None, default=0, type=<class 'int'>, choices=None, required=False, help="(int, default=0) [automatically set; don't specify this] batch size per GPU = round(args.bs / args.ac / dist.get_world_size() / 8) * 8", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--glb_batch_size'], dest='glb_batch_size', nargs=None, const=None, default=0, type=<class 'int'>, choices=None, required=False, help="(int, default=0) [automatically set; don't specify this] global batch size = args.batch_size * dist.get_world_size()", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--ac'], dest='ac', nargs=None, const=None, default=1, type=<class 'int'>, choices=None, required=False, help='(int, default=1) gradient accumulation', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--ep'], dest='ep', nargs=None, const=None, default=250, type=<class 'int'>, choices=None, required=False, help='(int, default=250) ', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--wp'], dest='wp', nargs=None, const=None, default=0, type=<class 'float'>, choices=None, required=False, help='(float, default=0) ', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--wp0'], dest='wp0', nargs=None, const=None, default=0.005, type=<class 'float'>, choices=None, required=False, help='(float, default=0.005) initial lr ratio at the begging of lr warm up', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--wpe'], dest='wpe', nargs=None, const=None, default=0.01, type=<class 'float'>, choices=None, required=False, help='(float, default=0.01) final lr ratio at the end of training', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--sche'], dest='sche', nargs=None, const=None, default='lin0', type=<class 'str'>, choices=None, required=False, help='(str, default=lin0) lr schedule', metavar=None, deprecated=False)
        - '_StoreAction(option_strings=[''--opt''], dest=''opt'', nargs=None, const=None, default=''adamw'', type=<class ''str''>, choices=None, required=False, help=''(str, default=adamw) lion: https://cloud.tencent.com/developer/article/2336657?areaId=106001 lr=5e-5 (0.25x) wd=0.8 (8x); Lion needs a large bs to work'', metavar=None, deprecated=False)'
        - _StoreAction(option_strings=['--afuse'], dest='afuse', nargs=None, const=None, default=True, type=<function boolean_type at 0x7f87c0ecff60>, choices=[True, False], required=False, help='(bool, default=True) fused adamw', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--saln'], dest='saln', nargs=None, const=None, default=False, type=<function boolean_type at 0x7f87c0ecff60>, choices=[True, False], required=False, help='(bool, default=False) whether to use shared adaln', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--anorm'], dest='anorm', nargs=None, const=None, default=True, type=<function boolean_type at 0x7f87c0ecff60>, choices=[True, False], required=False, help='(bool, default=True) whether to use L2 normalized attention', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--fuse'], dest='fuse', nargs=None, const=None, default=True, type=<function boolean_type at 0x7f87c0ecff60>, choices=[True, False], required=False, help='(bool, default=True) whether to use fused op like flash attn, xformers, fused MLP, fused LayerNorm, etc.', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--pn'], dest='pn', nargs=None, const=None, default='1_2_3_4_5_6_8_10_13_16', type=<class 'str'>, choices=None, required=False, help='(str, default=1_2_3_4_5_6_8_10_13_16) ', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--patch_size'], dest='patch_size', nargs=None, const=None, default=16, type=<class 'int'>, choices=None, required=False, help='(int, default=16) ', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--patch_nums'], dest='patch_nums', nargs='*', const=None, default=None, type=<class 'str'>, choices=None, required=False, help="(tuple, default=None) [automatically set; don't specify this] = tuple(map(int, args.pn.replace('-', '_').split('_')))", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--resos'], dest='resos', nargs='*', const=None, default=None, type=<class 'str'>, choices=None, required=False, help="(tuple, default=None) [automatically set; don't specify this] = tuple(pn * args.patch_size for pn in args.patch_nums)", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--data_load_reso'], dest='data_load_reso', nargs=None, const=None, default=None, type=<class 'int'>, choices=None, required=False, help="(int, default=None) [automatically set; don't specify this] would be max(patch_nums) * patch_size", metavar=None, deprecated=False)
        - '_StoreAction(option_strings=[''--mid_reso''], dest=''mid_reso'', nargs=None, const=None, default=1.125, type=<class ''float''>, choices=None, required=False, help=''(float, default=1.125) aug: first resize to mid_reso = 1.125 * data_load_reso, then crop to data_load_reso'', metavar=None, deprecated=False)'
        - '_StoreAction(option_strings=[''--hflip''], dest=''hflip'', nargs=None, const=None, default=False, type=<function boolean_type at 0x7f87c0ecff60>, choices=[True, False], required=False, help=''(bool, default=False) augmentation: horizontal flip'', metavar=None, deprecated=False)'
        - '_StoreAction(option_strings=[''--workers''], dest=''workers'', nargs=None, const=None, default=0, type=<class ''int''>, choices=None, required=False, help="(int, default=0) num workers; 0: auto, -1: don''t use multiprocessing in DataLoader", metavar=None, deprecated=False)'
        - _StoreAction(option_strings=['--pg'], dest='pg', nargs=None, const=None, default=0.0, type=<class 'float'>, choices=None, required=False, help='(float, default=0.0) >0 for use progressive training during [0%, this] of training', metavar=None, deprecated=False)
        - '_StoreAction(option_strings=[''--pg0''], dest=''pg0'', nargs=None, const=None, default=4, type=<class ''int''>, choices=None, required=False, help=''(int, default=4) progressive initial stage, 0: from the 1st token map, 1: from the 2nd token map, etc'', metavar=None, deprecated=False)'
        - _StoreAction(option_strings=['--pgwp'], dest='pgwp', nargs=None, const=None, default=0, type=<class 'float'>, choices=None, required=False, help='(float, default=0) num of warmup epochs at each progressive stage', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--cmd'], dest='cmd', nargs=None, const=None, default='--depth=16 --bs=32 --ep=200 --fp16=1 --alng=1e-3 --wpe=0.1 --data_path=data/ --tblr=4.167e-06', type=<class 'str'>, choices=None, required=False, help="(str, default=--depth=16 --bs=32 --ep=200 --fp16=1 --alng=1e-3 --wpe=0.1 --data_path=data/ --tblr=4.167e-06) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--branch'], dest='branch', nargs=None, const=None, default='main', type=<class 'str'>, choices=None, required=False, help="(str, default=main) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--commit_id'], dest='commit_id', nargs=None, const=None, default='7d1c142031b9835e1d8e75700a0c70cfb89ab954', type=<class 'str'>, choices=None, required=False, help="(str, default=7d1c142031b9835e1d8e75700a0c70cfb89ab954) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--commit_msg'], dest='commit_msg', nargs=None, const=None, default='upd', type=<class 'str'>, choices=None, required=False, help="(str, default=upd) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--acc_mean'], dest='acc_mean', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--acc_tail'], dest='acc_tail', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--L_mean'], dest='L_mean', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--L_tail'], dest='L_tail', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--vacc_mean'], dest='vacc_mean', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--vacc_tail'], dest='vacc_tail', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--vL_mean'], dest='vL_mean', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--vL_tail'], dest='vL_tail', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--grad_norm'], dest='grad_norm', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--cur_lr'], dest='cur_lr', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--cur_wd'], dest='cur_wd', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--cur_it'], dest='cur_it', nargs=None, const=None, default='', type=<class 'str'>, choices=None, required=False, help="(str, default=) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--cur_ep'], dest='cur_ep', nargs=None, const=None, default='', type=<class 'str'>, choices=None, required=False, help="(str, default=) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--remain_time'], dest='remain_time', nargs=None, const=None, default='', type=<class 'str'>, choices=None, required=False, help="(str, default=) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--finish_time'], dest='finish_time', nargs=None, const=None, default='', type=<class 'str'>, choices=None, required=False, help="(str, default=) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--local_out_dir_path'], dest='local_out_dir_path', nargs=None, const=None, default='/homes/gws/hhu22/VAR/local_output', type=<class 'str'>, choices=None, required=False, help="(str, default=/homes/gws/hhu22/VAR/local_output) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--tb_log_dir_path'], dest='tb_log_dir_path', nargs=None, const=None, default='...tb-...', type=<class 'str'>, choices=None, required=False, help="(str, default=...tb-...) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--log_txt_path'], dest='log_txt_path', nargs=None, const=None, default='...', type=<class 'str'>, choices=None, required=False, help="(str, default=...) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--last_ckpt_path'], dest='last_ckpt_path', nargs=None, const=None, default='...', type=<class 'str'>, choices=None, required=False, help="(str, default=...) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--tf32'], dest='tf32', nargs=None, const=None, default=True, type=<function boolean_type at 0x7f87c0ecff60>, choices=[True, False], required=False, help='(bool, default=True) whether to use TensorFloat32', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--device'], dest='device', nargs=None, const=None, default='cpu', type=<class 'str'>, choices=None, required=False, help="(str, default=cpu) [automatically set; don't specify this]", metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--seed'], dest='seed', nargs=None, const=None, default=None, type=<class 'int'>, choices=None, required=False, help='(int, default=None) seed', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--same_seed_for_all_ranks'], dest='same_seed_for_all_ranks', nargs=None, const=None, default=0, type=<class 'int'>, choices=None, required=False, help='(int, default=0) this is only for distributed sampler', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--local_debug'], dest='local_debug', nargs=None, const=None, default=False, type=<function boolean_type at 0x7f87c0ecff60>, choices=[True, False], required=False, help='(bool, default=False) ', metavar=None, deprecated=False)
        - _StoreAction(option_strings=['--dbg_nan'], dest='dbg_nan', nargs=None, const=None, default=False, type=<function boolean_type at 0x7f87c0ecff60>, choices=[True, False], required=False, help="(bool, default=False) 'KEVIN_LOCAL' in os.environ", metavar=None, deprecated=False)
        - _HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, required=False, help='show this help message and exit', metavar=None, deprecated=False)
_annotations:
    value:
        L_mean: builtins.float
        L_tail: builtins.float
        ac: builtins.int
        acc_mean: builtins.float
        acc_tail: builtins.float
        afuse: builtins.bool
        aln: builtins.float
        alng: builtins.float
        anorm: builtins.bool
        batch_size: builtins.int
        branch: builtins.str
        bs: builtins.int
        cmd: builtins.str
        commit_id: builtins.str
        commit_msg: builtins.str
        cur_ep: builtins.str
        cur_it: builtins.str
        cur_lr: builtins.float
        cur_wd: builtins.float
        data_load_reso: builtins.int
        data_path: builtins.str
        dbg_nan: builtins.bool
        depth: builtins.int
        device: builtins.str
        ep: builtins.int
        exp_name: builtins.str
        finish_time: builtins.str
        fp16: builtins.int
        fuse: builtins.bool
        glb_batch_size: builtins.int
        grad_norm: builtins.float
        hd: builtins.float
        hflip: builtins.bool
        ini: builtins.float
        last_ckpt_path: builtins.str
        local_debug: builtins.bool
        local_out_dir_path: builtins.str
        log_txt_path: builtins.str
        ls: builtins.float
        mid_reso: builtins.float
        opt: builtins.str
        patch_nums: builtins.tuple
        patch_size: builtins.int
        pg: builtins.float
        pg0: builtins.int
        pgwp: builtins.float
        pn: builtins.str
        remain_time: builtins.str
        resos: builtins.tuple
        saln: builtins.bool
        same_seed_for_all_ranks: builtins.int
        sche: builtins.str
        seed: builtins.int
        tb_log_dir_path: builtins.str
        tblr: builtins.float
        tclip: builtins.float
        tf32: builtins.bool
        tfast: builtins.int
        tlr: builtins.float
        twd: builtins.float
        twde: builtins.float
        vL_mean: builtins.float
        vL_tail: builtins.float
        vacc_mean: builtins.float
        vacc_tail: builtins.float
        vfast: builtins.int
        workers: builtins.int
        wp: builtins.float
        wp0: builtins.float
        wpe: builtins.float
_explicit_bool:
    value: true
_has_negative_number_optionals:
    value: []
_initialized:
    value: true
_mutually_exclusive_groups:
    value: []
_negative_number_matcher:
    value: re.compile('^-\\d+$|^-\\d*\\.\\d+$')
_option_string_actions:
    value:
        --L_mean: _StoreAction(option_strings=['--L_mean'], dest='L_mean', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --L_tail: _StoreAction(option_strings=['--L_tail'], dest='L_tail', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --ac: _StoreAction(option_strings=['--ac'], dest='ac', nargs=None, const=None, default=1, type=<class 'int'>, choices=None, required=False, help='(int, default=1) gradient accumulation', metavar=None, deprecated=False)
        --acc_mean: _StoreAction(option_strings=['--acc_mean'], dest='acc_mean', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --acc_tail: _StoreAction(option_strings=['--acc_tail'], dest='acc_tail', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --afuse: _StoreAction(option_strings=['--afuse'], dest='afuse', nargs=None, const=None, default=True, type=<function boolean_type at 0x7f87c0ecff60>, choices=[True, False], required=False, help='(bool, default=True) fused adamw', metavar=None, deprecated=False)
        --aln: _StoreAction(option_strings=['--aln'], dest='aln', nargs=None, const=None, default=0.5, type=<class 'float'>, choices=None, required=False, help="(float, default=0.5) the multiplier of ada_lin.w's initialization", metavar=None, deprecated=False)
        --alng: _StoreAction(option_strings=['--alng'], dest='alng', nargs=None, const=None, default=1e-05, type=<class 'float'>, choices=None, required=False, help="(float, default=1e-05) the multiplier of ada_lin.w[gamma channels]'s initialization", metavar=None, deprecated=False)
        --anorm: _StoreAction(option_strings=['--anorm'], dest='anorm', nargs=None, const=None, default=True, type=<function boolean_type at 0x7f87c0ecff60>, choices=[True, False], required=False, help='(bool, default=True) whether to use L2 normalized attention', metavar=None, deprecated=False)
        --batch_size: _StoreAction(option_strings=['--batch_size'], dest='batch_size', nargs=None, const=None, default=0, type=<class 'int'>, choices=None, required=False, help="(int, default=0) [automatically set; don't specify this] batch size per GPU = round(args.bs / args.ac / dist.get_world_size() / 8) * 8", metavar=None, deprecated=False)
        --branch: _StoreAction(option_strings=['--branch'], dest='branch', nargs=None, const=None, default='main', type=<class 'str'>, choices=None, required=False, help="(str, default=main) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --bs: _StoreAction(option_strings=['--bs'], dest='bs', nargs=None, const=None, default=768, type=<class 'int'>, choices=None, required=False, help='(int, default=768) global batch size', metavar=None, deprecated=False)
        --cmd: _StoreAction(option_strings=['--cmd'], dest='cmd', nargs=None, const=None, default='--depth=16 --bs=32 --ep=200 --fp16=1 --alng=1e-3 --wpe=0.1 --data_path=data/ --tblr=4.167e-06', type=<class 'str'>, choices=None, required=False, help="(str, default=--depth=16 --bs=32 --ep=200 --fp16=1 --alng=1e-3 --wpe=0.1 --data_path=data/ --tblr=4.167e-06) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --commit_id: _StoreAction(option_strings=['--commit_id'], dest='commit_id', nargs=None, const=None, default='7d1c142031b9835e1d8e75700a0c70cfb89ab954', type=<class 'str'>, choices=None, required=False, help="(str, default=7d1c142031b9835e1d8e75700a0c70cfb89ab954) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --commit_msg: _StoreAction(option_strings=['--commit_msg'], dest='commit_msg', nargs=None, const=None, default='upd', type=<class 'str'>, choices=None, required=False, help="(str, default=upd) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --cur_ep: _StoreAction(option_strings=['--cur_ep'], dest='cur_ep', nargs=None, const=None, default='', type=<class 'str'>, choices=None, required=False, help="(str, default=) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --cur_it: _StoreAction(option_strings=['--cur_it'], dest='cur_it', nargs=None, const=None, default='', type=<class 'str'>, choices=None, required=False, help="(str, default=) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --cur_lr: _StoreAction(option_strings=['--cur_lr'], dest='cur_lr', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --cur_wd: _StoreAction(option_strings=['--cur_wd'], dest='cur_wd', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --data_load_reso: _StoreAction(option_strings=['--data_load_reso'], dest='data_load_reso', nargs=None, const=None, default=None, type=<class 'int'>, choices=None, required=False, help="(int, default=None) [automatically set; don't specify this] would be max(patch_nums) * patch_size", metavar=None, deprecated=False)
        --data_path: _StoreAction(option_strings=['--data_path'], dest='data_path', nargs=None, const=None, default='/path/to/imagenet', type=<class 'str'>, choices=None, required=False, help='(str, default=/path/to/imagenet) ', metavar=None, deprecated=False)
        --dbg_nan: _StoreAction(option_strings=['--dbg_nan'], dest='dbg_nan', nargs=None, const=None, default=False, type=<function boolean_type at 0x7f87c0ecff60>, choices=[True, False], required=False, help="(bool, default=False) 'KEVIN_LOCAL' in os.environ", metavar=None, deprecated=False)
        --depth: _StoreAction(option_strings=['--depth'], dest='depth', nargs=None, const=None, default=16, type=<class 'int'>, choices=None, required=False, help='(int, default=16) VAR depth', metavar=None, deprecated=False)
        --device: _StoreAction(option_strings=['--device'], dest='device', nargs=None, const=None, default='cpu', type=<class 'str'>, choices=None, required=False, help="(str, default=cpu) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --ep: _StoreAction(option_strings=['--ep'], dest='ep', nargs=None, const=None, default=250, type=<class 'int'>, choices=None, required=False, help='(int, default=250) ', metavar=None, deprecated=False)
        --exp_name: _StoreAction(option_strings=['--exp_name'], dest='exp_name', nargs=None, const=None, default='text', type=<class 'str'>, choices=None, required=False, help='(str, default=text) ', metavar=None, deprecated=False)
        --finish_time: _StoreAction(option_strings=['--finish_time'], dest='finish_time', nargs=None, const=None, default='', type=<class 'str'>, choices=None, required=False, help="(str, default=) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --fp16: '_StoreAction(option_strings=[''--fp16''], dest=''fp16'', nargs=None, const=None, default=0, type=<class ''int''>, choices=None, required=False, help=''(int, default=0) 1: using fp16, 2: bf16'', metavar=None, deprecated=False)'
        --fuse: _StoreAction(option_strings=['--fuse'], dest='fuse', nargs=None, const=None, default=True, type=<function boolean_type at 0x7f87c0ecff60>, choices=[True, False], required=False, help='(bool, default=True) whether to use fused op like flash attn, xformers, fused MLP, fused LayerNorm, etc.', metavar=None, deprecated=False)
        --glb_batch_size: _StoreAction(option_strings=['--glb_batch_size'], dest='glb_batch_size', nargs=None, const=None, default=0, type=<class 'int'>, choices=None, required=False, help="(int, default=0) [automatically set; don't specify this] global batch size = args.batch_size * dist.get_world_size()", metavar=None, deprecated=False)
        --grad_norm: _StoreAction(option_strings=['--grad_norm'], dest='grad_norm', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --hd: _StoreAction(option_strings=['--hd'], dest='hd', nargs=None, const=None, default=0.02, type=<class 'float'>, choices=None, required=False, help='(float, default=0.02) head.w *= hd', metavar=None, deprecated=False)
        --help: _HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, required=False, help='show this help message and exit', metavar=None, deprecated=False)
        --hflip: '_StoreAction(option_strings=[''--hflip''], dest=''hflip'', nargs=None, const=None, default=False, type=<function boolean_type at 0x7f87c0ecff60>, choices=[True, False], required=False, help=''(bool, default=False) augmentation: horizontal flip'', metavar=None, deprecated=False)'
        --ini: '_StoreAction(option_strings=[''--ini''], dest=''ini'', nargs=None, const=None, default=-1, type=<class ''float''>, choices=None, required=False, help=''(float, default=-1) -1: automated model parameter initialization'', metavar=None, deprecated=False)'
        --last_ckpt_path: _StoreAction(option_strings=['--last_ckpt_path'], dest='last_ckpt_path', nargs=None, const=None, default='...', type=<class 'str'>, choices=None, required=False, help="(str, default=...) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --local_debug: _StoreAction(option_strings=['--local_debug'], dest='local_debug', nargs=None, const=None, default=False, type=<function boolean_type at 0x7f87c0ecff60>, choices=[True, False], required=False, help='(bool, default=False) ', metavar=None, deprecated=False)
        --local_out_dir_path: _StoreAction(option_strings=['--local_out_dir_path'], dest='local_out_dir_path', nargs=None, const=None, default='/homes/gws/hhu22/VAR/local_output', type=<class 'str'>, choices=None, required=False, help="(str, default=/homes/gws/hhu22/VAR/local_output) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --log_txt_path: _StoreAction(option_strings=['--log_txt_path'], dest='log_txt_path', nargs=None, const=None, default='...', type=<class 'str'>, choices=None, required=False, help="(str, default=...) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --ls: _StoreAction(option_strings=['--ls'], dest='ls', nargs=None, const=None, default=0.0, type=<class 'float'>, choices=None, required=False, help='(float, default=0.0) label smooth', metavar=None, deprecated=False)
        --mid_reso: '_StoreAction(option_strings=[''--mid_reso''], dest=''mid_reso'', nargs=None, const=None, default=1.125, type=<class ''float''>, choices=None, required=False, help=''(float, default=1.125) aug: first resize to mid_reso = 1.125 * data_load_reso, then crop to data_load_reso'', metavar=None, deprecated=False)'
        --opt: '_StoreAction(option_strings=[''--opt''], dest=''opt'', nargs=None, const=None, default=''adamw'', type=<class ''str''>, choices=None, required=False, help=''(str, default=adamw) lion: https://cloud.tencent.com/developer/article/2336657?areaId=106001 lr=5e-5 (0.25x) wd=0.8 (8x); Lion needs a large bs to work'', metavar=None, deprecated=False)'
        --patch_nums: _StoreAction(option_strings=['--patch_nums'], dest='patch_nums', nargs='*', const=None, default=None, type=<class 'str'>, choices=None, required=False, help="(tuple, default=None) [automatically set; don't specify this] = tuple(map(int, args.pn.replace('-', '_').split('_')))", metavar=None, deprecated=False)
        --patch_size: _StoreAction(option_strings=['--patch_size'], dest='patch_size', nargs=None, const=None, default=16, type=<class 'int'>, choices=None, required=False, help='(int, default=16) ', metavar=None, deprecated=False)
        --pg: _StoreAction(option_strings=['--pg'], dest='pg', nargs=None, const=None, default=0.0, type=<class 'float'>, choices=None, required=False, help='(float, default=0.0) >0 for use progressive training during [0%, this] of training', metavar=None, deprecated=False)
        --pg0: '_StoreAction(option_strings=[''--pg0''], dest=''pg0'', nargs=None, const=None, default=4, type=<class ''int''>, choices=None, required=False, help=''(int, default=4) progressive initial stage, 0: from the 1st token map, 1: from the 2nd token map, etc'', metavar=None, deprecated=False)'
        --pgwp: _StoreAction(option_strings=['--pgwp'], dest='pgwp', nargs=None, const=None, default=0, type=<class 'float'>, choices=None, required=False, help='(float, default=0) num of warmup epochs at each progressive stage', metavar=None, deprecated=False)
        --pn: _StoreAction(option_strings=['--pn'], dest='pn', nargs=None, const=None, default='1_2_3_4_5_6_8_10_13_16', type=<class 'str'>, choices=None, required=False, help='(str, default=1_2_3_4_5_6_8_10_13_16) ', metavar=None, deprecated=False)
        --remain_time: _StoreAction(option_strings=['--remain_time'], dest='remain_time', nargs=None, const=None, default='', type=<class 'str'>, choices=None, required=False, help="(str, default=) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --resos: _StoreAction(option_strings=['--resos'], dest='resos', nargs='*', const=None, default=None, type=<class 'str'>, choices=None, required=False, help="(tuple, default=None) [automatically set; don't specify this] = tuple(pn * args.patch_size for pn in args.patch_nums)", metavar=None, deprecated=False)
        --saln: _StoreAction(option_strings=['--saln'], dest='saln', nargs=None, const=None, default=False, type=<function boolean_type at 0x7f87c0ecff60>, choices=[True, False], required=False, help='(bool, default=False) whether to use shared adaln', metavar=None, deprecated=False)
        --same_seed_for_all_ranks: _StoreAction(option_strings=['--same_seed_for_all_ranks'], dest='same_seed_for_all_ranks', nargs=None, const=None, default=0, type=<class 'int'>, choices=None, required=False, help='(int, default=0) this is only for distributed sampler', metavar=None, deprecated=False)
        --sche: _StoreAction(option_strings=['--sche'], dest='sche', nargs=None, const=None, default='lin0', type=<class 'str'>, choices=None, required=False, help='(str, default=lin0) lr schedule', metavar=None, deprecated=False)
        --seed: _StoreAction(option_strings=['--seed'], dest='seed', nargs=None, const=None, default=None, type=<class 'int'>, choices=None, required=False, help='(int, default=None) seed', metavar=None, deprecated=False)
        --tb_log_dir_path: _StoreAction(option_strings=['--tb_log_dir_path'], dest='tb_log_dir_path', nargs=None, const=None, default='...tb-...', type=<class 'str'>, choices=None, required=False, help="(str, default=...tb-...) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --tblr: _StoreAction(option_strings=['--tblr'], dest='tblr', nargs=None, const=None, default=0.0001, type=<class 'float'>, choices=None, required=False, help='(float, default=0.0001) base lr', metavar=None, deprecated=False)
        --tclip: _StoreAction(option_strings=['--tclip'], dest='tclip', nargs=None, const=None, default=2.0, type=<class 'float'>, choices=None, required=False, help='(float, default=2.0) <=0 for not using grad clip', metavar=None, deprecated=False)
        --tf32: _StoreAction(option_strings=['--tf32'], dest='tf32', nargs=None, const=None, default=True, type=<function boolean_type at 0x7f87c0ecff60>, choices=[True, False], required=False, help='(bool, default=True) whether to use TensorFloat32', metavar=None, deprecated=False)
        --tfast: '_StoreAction(option_strings=[''--tfast''], dest=''tfast'', nargs=None, const=None, default=0, type=<class ''int''>, choices=None, required=False, help="(int, default=0) torch.compile VAR; =0: not compile; 1: compile with ''reduce-overhead''; 2: compile with ''max-autotune''", metavar=None, deprecated=False)'
        --tlr: _StoreAction(option_strings=['--tlr'], dest='tlr', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help='(float, default=None) lr = base lr * (bs / 256)', metavar=None, deprecated=False)
        --twd: _StoreAction(option_strings=['--twd'], dest='twd', nargs=None, const=None, default=0.05, type=<class 'float'>, choices=None, required=False, help='(float, default=0.05) initial wd', metavar=None, deprecated=False)
        --twde: _StoreAction(option_strings=['--twde'], dest='twde', nargs=None, const=None, default=0, type=<class 'float'>, choices=None, required=False, help='(float, default=0) final wd, =twde or twd', metavar=None, deprecated=False)
        --vL_mean: _StoreAction(option_strings=['--vL_mean'], dest='vL_mean', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --vL_tail: _StoreAction(option_strings=['--vL_tail'], dest='vL_tail', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --vacc_mean: _StoreAction(option_strings=['--vacc_mean'], dest='vacc_mean', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --vacc_tail: _StoreAction(option_strings=['--vacc_tail'], dest='vacc_tail', nargs=None, const=None, default=None, type=<class 'float'>, choices=None, required=False, help="(float, default=None) [automatically set; don't specify this]", metavar=None, deprecated=False)
        --vfast: '_StoreAction(option_strings=[''--vfast''], dest=''vfast'', nargs=None, const=None, default=0, type=<class ''int''>, choices=None, required=False, help="(int, default=0) torch.compile VAE; =0: not compile; 1: compile with ''reduce-overhead''; 2: compile with ''max-autotune''", metavar=None, deprecated=False)'
        --workers: '_StoreAction(option_strings=[''--workers''], dest=''workers'', nargs=None, const=None, default=0, type=<class ''int''>, choices=None, required=False, help="(int, default=0) num workers; 0: auto, -1: don''t use multiprocessing in DataLoader", metavar=None, deprecated=False)'
        --wp: _StoreAction(option_strings=['--wp'], dest='wp', nargs=None, const=None, default=0, type=<class 'float'>, choices=None, required=False, help='(float, default=0) ', metavar=None, deprecated=False)
        --wp0: _StoreAction(option_strings=['--wp0'], dest='wp0', nargs=None, const=None, default=0.005, type=<class 'float'>, choices=None, required=False, help='(float, default=0.005) initial lr ratio at the begging of lr warm up', metavar=None, deprecated=False)
        --wpe: _StoreAction(option_strings=['--wpe'], dest='wpe', nargs=None, const=None, default=0.01, type=<class 'float'>, choices=None, required=False, help='(float, default=0.01) final lr ratio at the end of training', metavar=None, deprecated=False)
        -h: _HelpAction(option_strings=['-h', '--help'], dest='help', nargs=0, const=None, default='==SUPPRESS==', type=None, choices=None, required=False, help='show this help message and exit', metavar=None, deprecated=False)
_optionals:
    value: <argparse._ArgumentGroup object at 0x7f87a6b3c7d0>
_parsed:
    value: true
_positionals:
    value: <argparse._ArgumentGroup object at 0x7f87a6b396a0>
_registries:
    value:
        action:
            append: argparse._AppendAction
            append_const: argparse._AppendConstAction
            count: argparse._CountAction
            extend: argparse._ExtendAction
            help: argparse._HelpAction
            "null": argparse._StoreAction
            parsers: argparse._SubParsersAction
            store: argparse._StoreAction
            store_const: argparse._StoreConstAction
            store_false: argparse._StoreFalseAction
            store_true: argparse._StoreTrueAction
            version: argparse._VersionAction
        type:
            "null": argparse.ArgumentParser.__init__.<locals>.identity
_subparser_buffer:
    value: []
_subparsers:
    value: null
_underscores_to_dashes:
    value: false
_wandb:
    value:
        cli_version: 0.20.1
        m: []
        python_version: 3.13.3
        t:
            "1":
                - 1
                - 41
                - 49
            "2":
                - 1
                - 41
                - 49
            "3":
                - 13
                - 16
                - 55
                - 61
            "4": 3.13.3
            "5": 0.20.1
            "12": 0.20.1
            "13": linux-x86_64
L_mean:
    value: null
L_tail:
    value: null
ac:
    value: 1
acc_mean:
    value: null
acc_tail:
    value: null
add_help:
    value: true
afuse:
    value: true
allow_abbrev:
    value: true
aln:
    value: 0.5
alng:
    value: 0.001
anorm:
    value: true
args_from_configs:
    value: []
argument_buffer:
    value:
        help:
            - - -h
              - --help
            - action: help
              default: ==SUPPRESS==
              help: show this help message and exit
argument_default:
    value: null
batch_size:
    value: 32
branch:
    value: main
bs:
    value: 32
class_variables:
    value:
        L_mean:
            comment: '[automatically set; don''t specify this]'
        L_tail:
            comment: '[automatically set; don''t specify this]'
        ac:
            comment: gradient accumulation
        acc_mean:
            comment: '[automatically set; don''t specify this]'
        acc_tail:
            comment: '[automatically set; don''t specify this]'
        afuse:
            comment: fused adamw
        aln:
            comment: the multiplier of ada_lin.w's initialization
        alng:
            comment: the multiplier of ada_lin.w[gamma channels]'s initialization
        anorm:
            comment: whether to use L2 normalized attention
        batch_size:
            comment: '[automatically set; don''t specify this] batch size per GPU = round(args.bs / args.ac / dist.get_world_size() / 8) * 8'
        branch:
            comment: '[automatically set; don''t specify this]'
        bs:
            comment: global batch size
        cmd:
            comment: '[automatically set; don''t specify this]'
        commit_id:
            comment: '[automatically set; don''t specify this]'
        commit_msg:
            comment: '[automatically set; don''t specify this]'
        cur_ep:
            comment: '[automatically set; don''t specify this]'
        cur_it:
            comment: '[automatically set; don''t specify this]'
        cur_lr:
            comment: '[automatically set; don''t specify this]'
        cur_wd:
            comment: '[automatically set; don''t specify this]'
        data_load_reso:
            comment: '[automatically set; don''t specify this] would be max(patch_nums) * patch_size'
        data_path:
            comment: ""
        dbg_nan:
            comment: '''KEVIN_LOCAL'' in os.environ'
        depth:
            comment: VAR depth
        device:
            comment: '[automatically set; don''t specify this]'
        ep:
            comment: ""
        exp_name:
            comment: ""
        finish_time:
            comment: '[automatically set; don''t specify this]'
        fp16:
            comment: '1: using fp16, 2: bf16'
        fuse:
            comment: whether to use fused op like flash attn, xformers, fused MLP, fused LayerNorm, etc.
        glb_batch_size:
            comment: '[automatically set; don''t specify this] global batch size = args.batch_size * dist.get_world_size()'
        grad_norm:
            comment: '[automatically set; don''t specify this]'
        hd:
            comment: head.w *= hd
        hflip:
            comment: 'augmentation: horizontal flip'
        ini:
            comment: '-1: automated model parameter initialization'
        last_ckpt_path:
            comment: '[automatically set; don''t specify this]'
        local_debug:
            comment: ""
        local_out_dir_path:
            comment: '[automatically set; don''t specify this]'
        log_txt_path:
            comment: '[automatically set; don''t specify this]'
        ls:
            comment: label smooth
        mid_reso:
            comment: 'aug: first resize to mid_reso = 1.125 * data_load_reso, then crop to data_load_reso'
        opt:
            comment: 'lion: https://cloud.tencent.com/developer/article/2336657?areaId=106001 lr=5e-5 (0.25x) wd=0.8 (8x); Lion needs a large bs to work'
        patch_nums:
            comment: '[automatically set; don''t specify this] = tuple(map(int, args.pn.replace(''-'', ''_'').split(''_'')))'
        patch_size:
            comment: ""
        pg:
            comment: '>0 for use progressive training during [0%, this] of training'
        pg0:
            comment: 'progressive initial stage, 0: from the 1st token map, 1: from the 2nd token map, etc'
        pgwp:
            comment: num of warmup epochs at each progressive stage
        pn:
            comment: ""
        remain_time:
            comment: '[automatically set; don''t specify this]'
        resos:
            comment: '[automatically set; don''t specify this] = tuple(pn * args.patch_size for pn in args.patch_nums)'
        saln:
            comment: whether to use shared adaln
        same_seed_for_all_ranks:
            comment: this is only for distributed sampler
        sche:
            comment: lr schedule
        seed:
            comment: seed
        tb_log_dir_path:
            comment: '[automatically set; don''t specify this]'
        tblr:
            comment: base lr
        tclip:
            comment: <=0 for not using grad clip
        tf32:
            comment: whether to use TensorFloat32
        tfast:
            comment: 'torch.compile VAR; =0: not compile; 1: compile with ''reduce-overhead''; 2: compile with ''max-autotune'''
        tlr:
            comment: lr = base lr * (bs / 256)
        twd:
            comment: initial wd
        twde:
            comment: final wd, =twde or twd
        vL_mean:
            comment: '[automatically set; don''t specify this]'
        vL_tail:
            comment: '[automatically set; don''t specify this]'
        vacc_mean:
            comment: '[automatically set; don''t specify this]'
        vacc_tail:
            comment: '[automatically set; don''t specify this]'
        vfast:
            comment: 'torch.compile VAE; =0: not compile; 1: compile with ''reduce-overhead''; 2: compile with ''max-autotune'''
        workers:
            comment: 'num workers; 0: auto, -1: don''t use multiprocessing in DataLoader'
        wp:
            comment: ""
        wp0:
            comment: initial lr ratio at the begging of lr warm up
        wpe:
            comment: final lr ratio at the end of training
cmd:
    value: --depth=16 --bs=32 --ep=200 --fp16=1 --alng=1e-3 --wpe=0.1 --data_path=data/ --tblr=4.167e-06
commit_id:
    value: 7d1c142031b9835e1d8e75700a0c70cfb89ab954
commit_msg:
    value: upd
conflict_handler:
    value: error
cur_ep:
    value: ""
cur_it:
    value: ""
cur_lr:
    value: null
cur_wd:
    value: null
data_load_reso:
    value: 256
data_path:
    value: data/
dbg_nan:
    value: false
depth:
    value: 16
description:
    value: null
device:
    value: cuda:0
ep:
    value: 200
epilog:
    value: null
exit_on_error:
    value: true
exp_name:
    value: text
extra_args:
    value: []
finish_time:
    value: ""
formatter_class:
    value: argparse.HelpFormatter
fp16:
    value: 1
fromfile_prefix_chars:
    value: null
fuse:
    value: true
glb_batch_size:
    value: 32
grad_norm:
    value: null
hd:
    value: 0.02
hflip:
    value: false
ini:
    value: -1
last_ckpt_path:
    value: /homes/gws/hhu22/VAR/local_output/ar-ckpt-last.pth
local_debug:
    value: false
local_out_dir_path:
    value: /homes/gws/hhu22/VAR/local_output
log_txt_path:
    value: /homes/gws/hhu22/VAR/local_output/log.txt
ls:
    value: 0
mid_reso:
    value: 1.125
opt:
    value: adamw
patch_nums:
    value:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 8
        - 10
        - 13
        - 16
patch_size:
    value: 16
pg:
    value: 0
pg0:
    value: 4
pgwp:
    value: 0.6666666666666666
pn:
    value: "1_2_3_4_5_6_8_10_13_16"
prefix_chars:
    value: '-'
prog:
    value: train.py
remain_time:
    value: ""
resos:
    value:
        - 16
        - 32
        - 48
        - 64
        - 80
        - 96
        - 128
        - 160
        - 208
        - 256
saln:
    value: false
same_seed_for_all_ranks:
    value: 0
sche:
    value: lin0
seed:
    value: null
tb_log_dir_path:
    value: /homes/gws/hhu22/VAR/local_output/tb-VARd16__pn1_2_3_4_5_6_8_10_13_16__b32ep200adamlr4.167e-06wd0.05
tblr:
    value: 4.167e-06
tclip:
    value: 2
tf32:
    value: true
tfast:
    value: 0
tlr:
    value: 5.20875e-07
twd:
    value: 0.05
twde:
    value: 0.05
usage:
    value: null
vL_mean:
    value: null
vL_tail:
    value: null
vacc_mean:
    value: null
vacc_tail:
    value: null
vfast:
    value: 0
workers:
    value: 0
wp:
    value: 4
wp0:
    value: 0.005
wpe:
    value: 0.1
